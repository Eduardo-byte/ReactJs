{"ast":null,"code":"import React from 'react';\nconst PRODUCTS = '_PRODUCTS';\nexport function ErrorValidation(errors) {\n  this.errors = errors;\n}\nexport default class ProductService {\n  constructor() {\n    this.validation = product => {\n      const errors = [];\n\n      if (!product.name) {\n        errors.push(\"Name field is required\");\n      }\n\n      if (!product.sku) {\n        errors.push(\"SKU field is required\");\n      }\n\n      if (!product.description) {\n        errors.push(\"Description field is required\");\n      }\n\n      if (!product.price || product.price <= 0) {\n        errors.push(\"Price field needs to be bigger than zero(0)\");\n      }\n\n      if (!product.suplier) {\n        errors.push(\"Suplier field is required\");\n      }\n\n      if (errors.length > 0) {\n        throw new ErrorValidation(errors);\n      }\n    };\n\n    this.list = product => {\n      const products = localStorage.getItem(PRODUCTS);\n      return JSON.parse(products);\n    };\n\n    this.save = product => {\n      this.validation(product);\n      let products = localStorage.getItem(PRODUCTS);\n\n      if (!products) {\n        products = [];\n      } else {\n        products = JSON.parse(products);\n      }\n\n      products.push(product);\n      localStorage.setItem(PRODUCTS, JSON.stringify(products));\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/eduardo/react-projects/register-products/src/app/productService.js"],"names":["React","PRODUCTS","ErrorValidation","errors","ProductService","validation","product","name","push","sku","description","price","suplier","length","list","products","localStorage","getItem","JSON","parse","save","setItem","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAgC;AACnC,OAAKA,MAAL,GAAcA,MAAd;AACH;AAED,eAAe,MAAMC,cAAN,CAAoB;AAAA;AAAA,SAE/BC,UAF+B,GAEjBC,OAAD,IAAa;AACtB,YAAMH,MAAM,GAAG,EAAf;;AAEA,UAAG,CAACG,OAAO,CAACC,IAAZ,EAAiB;AACbJ,QAAAA,MAAM,CAACK,IAAP,CAAY,wBAAZ;AACH;;AAED,UAAG,CAACF,OAAO,CAACG,GAAZ,EAAgB;AACZN,QAAAA,MAAM,CAACK,IAAP,CAAY,uBAAZ;AACH;;AAED,UAAG,CAACF,OAAO,CAACI,WAAZ,EAAwB;AACpBP,QAAAA,MAAM,CAACK,IAAP,CAAY,+BAAZ;AACH;;AAED,UAAG,CAACF,OAAO,CAACK,KAAT,IAAkBL,OAAO,CAACK,KAAR,IAAiB,CAAtC,EAAwC;AACpCR,QAAAA,MAAM,CAACK,IAAP,CAAY,6CAAZ;AACH;;AAED,UAAG,CAACF,OAAO,CAACM,OAAZ,EAAoB;AAChBT,QAAAA,MAAM,CAACK,IAAP,CAAY,2BAAZ;AACH;;AAED,UAAGL,MAAM,CAACU,MAAP,GAAgB,CAAnB,EAAqB;AACjB,cAAM,IAAIX,eAAJ,CAAoBC,MAApB,CAAN;AACH;AACJ,KA5B8B;;AAAA,SA8B/BW,IA9B+B,GA8BvBR,OAAD,IAAa;AAChB,YAAMS,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBhB,QAArB,CAAjB;AACA,aAAOiB,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAP;AACH,KAjC8B;;AAAA,SAmC/BK,IAnC+B,GAmCvBd,OAAD,IAAa;AAEhB,WAAKD,UAAL,CAAgBC,OAAhB;AAEA,UAAIS,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBhB,QAArB,CAAf;;AACA,UAAI,CAACc,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAG,EAAX;AACH,OAFD,MAEK;AACDA,QAAAA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACH;;AACDA,MAAAA,QAAQ,CAACP,IAAT,CAAcF,OAAd;AACAU,MAAAA,YAAY,CAACK,OAAb,CAAqBpB,QAArB,EAAgCiB,IAAI,CAACI,SAAL,CAAeP,QAAf,CAAhC;AACH,KA/C8B;AAAA;;AAAA","sourcesContent":["import React from 'react'\n\nconst PRODUCTS = '_PRODUCTS'\n\nexport function ErrorValidation(errors){\n    this.errors = errors;\n}\n\nexport default class ProductService{\n\n    validation = (product) => {\n        const errors = []\n\n        if(!product.name){\n            errors.push(\"Name field is required\")\n        }\n\n        if(!product.sku){\n            errors.push(\"SKU field is required\")\n        }\n\n        if(!product.description){\n            errors.push(\"Description field is required\")\n        }\n\n        if(!product.price || product.price <= 0){\n            errors.push(\"Price field needs to be bigger than zero(0)\")\n        }\n\n        if(!product.suplier){\n            errors.push(\"Suplier field is required\")\n        }\n\n        if(errors.length > 0){\n            throw new ErrorValidation(errors)\n        }\n    }\n\n    list = (product) => {\n        const products = localStorage.getItem(PRODUCTS)\n        return JSON.parse(products)\n    }\n\n    save = (product) => {\n\n        this.validation(product)\n\n        let products = localStorage.getItem(PRODUCTS)\n        if (!products) {\n            products = []\n        }else{\n            products = JSON.parse(products)\n        }\n        products.push(product);\n        localStorage.setItem(PRODUCTS , JSON.stringify(products))\n    }\n}"]},"metadata":{},"sourceType":"module"}